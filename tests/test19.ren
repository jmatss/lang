ext fn printf(format: {u8}, ...) -> i32

struct InnerStruct
{
    x: f32,
    y: f64,
}

impl InnerStruct
{
    fn this sum() -> f64
    {
        return this.x as f64 + this.y
    }
}

struct OuterStruct
{
    a: i32,
    b: i64,
}

impl OuterStruct
{
    fn new() -> InnerStruct
    {
        return InnerStruct { 1.0, 2.0 }
    }
}

fn main() -> i32
{
    var inner_y1 = InnerStruct { 3.0, 4.0 }.y
    var inner_y2 = OuterStruct::new().y
    printf("inner_y1: %f, inner_y2: %f", inner_y1, inner_y2)
    std::assert(inner_y1 == 4.0 and inner_y2 == 2.0)

    var inner_sum1 = InnerStruct { 3.0, 4.0 }.sum()
    var inner_sum2 = OuterStruct::new().sum()
    printf("\ninner_sum1: %f, inner_sum2: %f", inner_sum1, inner_sum2)
    std::assert(inner_sum1 == 7.0 and inner_sum2 == 3.0)

    var a = OuterStruct::new()
    var b = a.y
    a.y = 3.0
    printf("\na.y: %f, b: %f", a.y, b)
    std::assert(a.y == 3.0 and b == 2.0)

    return 0
}