use std::string::String

fn main() -> int {
    var expected_str_or_error = String::from_view("123")
    std::assert(expected_str_or_error.is_success())
    var expected_str = expected_str_or_error.get_success()


    var i_i8: i8 = 123
    var s_i8_or_error = i8::to_string(i_i8)
    std::assert(s_i8_or_error.is_success())
    var s_i8 = s_i8_or_error.get_success()
    printf(c"\ns_i8 -- \"%s\", len: %d, cap: %d", s_i8.to_c_string().get_success(), s_i8.len(), s_i8.cap())
    std::assert(expected_str == s_i8)
    s_i8.deinit()


    var i_u8: u8 = 123
    var s_u8_or_error = u8::to_string(i_u8)
    std::assert(s_u8_or_error.is_success())
    var s_u8 = s_u8_or_error.get_success()
    printf(c"\ns_u8 -- \"%s\", len: %d, cap: %d", s_u8.to_c_string().get_success(), s_u8.len(), s_u8.cap())
    std::assert(expected_str == s_u8)
    s_u8.deinit()

    return 0
}
