use std.assert

struct TestStruct
{
    a: i32,
    b: {f32},
    c: i32,
}

implement TestStruct
{
    function add(input: i32) -> i32
    {
        this.a = 20
        this.b.* = 2.0
        return this.a + this.c + input
    }
}

function main() -> int
{
    // TODO: If the `b` inside "TestStruct" is f64, this won't compile.
    //       It seems like this local `b` gets the inferred type of f32
    //       and then won't be compatible with the f64 in the TestStruct.
    //       Need to infer the type correctly.
    //       It compiles if the local `b` sets the type to f64 manually.

    var b = 1.0
    var test_struct = TestStruct { 10, b.&, 2 }

    var actual_result = test_struct.add(8)

    assert(actual_result == 30)
    assert(test_struct.b.* == 2.0)
    
    return 0
}