use std::types::Optional

extern fn printf(format: {u8}, ...) -> i32

struct TypeStruct
{
    len: u64,
}

impl TypeStruct
{
    fn this len() -> u64
    {
        return this.len
    }
}

fn main() -> i32
{
    var x = Optional::some(TypeStruct { 123 })

    var y
    if value is x.some
    {
        y = Optional::some(value.len())
    }
    else
    {
        y = Optional::none()
    }

    printf("y.get(): %d", y.get() as i32)
    std::assert(y.some == 123)

    return 0
}