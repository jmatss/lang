external function printf(format: {u8}, ...) -> i32
external function malloc(size: i32) -> {void}     // TODO: How should a "void*" be represented?
external function free(ptr: {void})
external function itoa(value: i32, s: {u8}, radix: i32) -> {u8}

function fac(n: i32) -> i32
{
    var res: i32
    if n <= 1
    {
        if (n == 1)
        {
            res = 1
        }
        else
        {
            return 1
        }
    }
    else
    {
        return n * fac(n - 1)
    }
    return res
}

function main() -> i32
{   
    var n: i32 = 7
    printf("n: %d, result: %d", n, fac(n))
    
    var buf: {u8} = malloc(20)
    printf("\nitoa: %s", itoa(n, buf, 10))
    
    free(buf)
    return 0
}