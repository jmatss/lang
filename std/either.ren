mod std

pub union Either<L, R> {
    var left: L
    var right: R

    fn left(val: L = @null()) -> Either<L, R> {
        return Either { left = val}
    }

    fn right(val: R = @null()) -> Either<L, R> {
        return Either { right = val}
    }

    fn {this} is_left() -> bool {
        if _ is this.left {
            return true
        } else {
            return false
        }
    }

    fn {this} is_right() -> bool {
        return not this.is_left()
    }

    fn {this} get_left() -> L {
        return this.left
    }

    fn {this} get_right() -> R {
        return this.right
    }
}
